{
  "name": "Understanding Large Social Network",
  "tagline": "Learning effective representation of a social graph.",
  "body": "### Problem Statement\r\nRecently there has been an increasing attention to use Deep Learning(DL) techniques to analyze social graphs, such as Flickr, Youtube, Twitter and so on. The beauty of such solution is that once DL is applied, several network mining tasks such as node classification, link prediction, node visualization, node recommendation can be solved by conventional machine learning algorithms.\r\n\r\nIn this project, we will build a model that can capture the network information of a node in an efficient\r\nand scalable manner. These learned representations will be used to do nodes classification in our project.\r\n\r\n### Concept Idea\r\nThis project studies the problem of embedding very large information networks into low-dimensional vector spaces,\r\nwhich is useful in many tasks such as visualization, node classification, and link prediction. Most existing graph em-\r\nbedding methods do not scale for real world information networks which usually contain millions of nodes.  In this\r\npaper, we implemented a network embedding method called the “LINE,” which is suitable for arbitrary types of informa-\r\ntion networks: undirected, directed, and/or weighted. The method optimizes a carefully designed objective function\r\nthat preserves both the local and global network structures. An edge-sampling algorithm is proposed that addresses the\r\nlimitation of the classical stochastic gradient descent and improves both the effectiveness and the efficiency of the inference.  Empirical experiments prove the effectiveness of the LINE on a variety of real-world information networks,including language networks, social networks, and citation networks. The algorithm is very efficient, which is able to learn the embedding of a network with millions of vertices and billions of edges in a few hours on a typical single machine.\r\n\r\n### Applications\r\nBetter representation of nodes helps in solving various network mining tasks by conventional machine learning algorithms. It can be used for:\r\n\r\n* Node classification\r\n* Link prediction\r\n* Node visualization\r\n* Node recommendation\r\n\r\n### Important Project Links\r\n* [Project Repository](https://github.com/AbhishekKumarSingh/graphEmbeddings)\r\n* [Project Webpage]()\r\n* [Project Video]()\r\n* [Project Slides]()\r\n\r\n### References\r\n* [DeepWalk: Online Learning of Social Representations](http://arxiv.org/pdf/1403.6652.pdf)\r\n* [LINE: Large-scale Information Network Embedding](http://www.www2015.it/documents/proceedings/proceedings/p1067.pdf)\r\n* [Understanding basics of Neural Network](http://cs224d.stanford.edu/lecture_notes/LectureNotes3.pdf)\r\n* [Understanding the need of deep learning](https://www.youtube.com/watch?v=sU_Yu_USrNc)\r\n* [Datasets: BlogCatalog Data, Flickr Data, Youtube Data](http://leitang.net/social_dimension.html)\r\n\r\n### Authors and Contributors\r\nAbhishek Singh (@abhishekkumarsingh)\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}